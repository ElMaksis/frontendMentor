function toggleTheme() { "light" === localStorage.getItem("theme") ? (themeLink.setAttribute("href", "theme-light.min.css"), themeIcon.src = "./images/icon-moon.svg") : (themeLink.setAttribute("href", "theme-dark.min.css"), themeIcon.src = "./images/icon-sun.svg") } function toggleStorageSetting() { "light" === localStorage.getItem("theme") ? (localStorage.removeItem("theme"), toggleTheme()) : (localStorage.setItem("theme", "light"), toggleTheme()) } function addTodoItem(e) { e.preventDefault(); const t = todoInput.value; todoInput.value = "", todoList.insertAdjacentHTML("beforeend", `<div class="app-item app-item--active">\n    <div class="app-box">\n        <label class="app-box__label">\n            <input class="app-box__input" type="checkbox">\n            <span class="app-box__checkbox">\n                <img class="app-box__select-icon" src="./images/icon-check.svg"\n                    alt="checkbox select icon">\n            </span>\n        </label>\n    </div>\n    <p class="app-item__text">\n        ${t}\n    </p>\n    <button class="app-item__btn">\n        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">\n            <path fill="#494C6B" fill-rule="evenodd"\n                d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z" />\n        </svg>\n    </button>\n</div>`) } function todoItemClickHandler(e) { if (e.closest(".app-item__btn")) e.closest(".app-item").remove(); else if (e.closest(".app-box__label")) { const t = e.closest(".app-item"); t.querySelector(".app-box__input").checked ? (t.classList.add("app-item--done"), t.classList.remove("app-item--active")) : (t.classList.add("app-item--active"), t.classList.remove("app-item--done")) } } function initReorderList(e) { e.preventDefault(); const t = todoList.querySelector(".dragging"); let o = [...todoList.querySelectorAll(".app-item:not(.dragging)")].find(t => e.clientY <= t.offsetTop + t.offsetHeight / 2); todoList.insertBefore(t, o) } let themeBtn = document.querySelector(".header__btn"), themeIcon = document.querySelector(".header__switcher"), themeLink = document.querySelector("#theme-style"), addBtn = document.querySelector(".new-task__btn"), todoInput = document.querySelector(".app__todo-desc"), todoList = document.querySelector(".app-list"), todoTasks = document.querySelectorAll(".app-item"), filterBtns = document.querySelectorAll(".app-footer__btn"); toggleTheme(), themeBtn.addEventListener("click", toggleStorageSetting), todoInput.addEventListener("change", addTodoItem), addBtn.addEventListener("click", () => { todoInput.value }), todoList.addEventListener("click", function (e) { todoItemClickHandler(e.target) }), todoTasks.forEach(e => { e.addEventListener("dragstart", () => { setTimeout(() => e.classList.add("dragging"), 0) }), e.addEventListener("dragend", () => { e.classList.remove("dragging") }) }), todoList.addEventListener("dragover", initReorderList), todoList.addEventListener("dragenter", e => { e.preventDefault() }), document.querySelector(".app-footer__control").addEventListener("click", function (e) { if (e.target.classList.contains("app-footer__btn")) { const t = e.target.dataset.filter, o = todoList.querySelectorAll(".app-item"); switch (t) { case "last": let a = 0; for (let e = o.length - 1; e >= 0; e--)o[e].classList.contains("app-item--active") && a < 5 ? (o[e].style = "display: flex", a++) : o[e].style = "display: none"; filterBtns.forEach(e => { e.classList.remove("app-footer__btn--active") }), e.target.classList.add("app-footer__btn--active"); break; case "all": for (let e of o) e.style = "display: flex"; filterBtns.forEach(e => { e.classList.remove("app-footer__btn--active") }), e.target.classList.add("app-footer__btn--active"); break; case "active": for (let e of o) e.classList.contains("app-item--active") ? e.style = "display: flex" : e.style = "display: none"; filterBtns.forEach(e => { e.classList.remove("app-footer__btn--active") }), e.target.classList.add("app-footer__btn--active"); break; case "complete": for (let e of o) e.classList.contains("app-item--done") ? e.style = "display: flex" : e.style = "display: none"; filterBtns.forEach(e => { e.classList.remove("app-footer__btn--active") }), e.target.classList.add("app-footer__btn--active"); break; case "clear": for (let e of o) e.classList.contains("app-item--done") && e.remove() } } });